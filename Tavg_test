[backend]
precision = single
rank-allocator = linear

[backend-cuda]
device-id = local-rank

[constants]
gamma = 1.2941
Pr = 0.72
Uin= 117.6730
Vin= 0.0000
w = 0.0
Pc = 61.650773
rhoc= 0.001440
mu = 1.370e-5
cpTref =230401
cpTs = 187359.12

[solver]
system = navier-stokes
order = 1
;shock-capturing = entropy-filter
shock-capturing = artificial-viscosity
viscosity-correction = sutherland

;[solver-entropy-filter]
;d-min = 1e-6
;p-min = 1e-6
;e-tol = 1e-6
;e-func = physical
;niters = 2

[solver-time-integrator]
formluation = dual
scheme = rk45
controller = none ;pi
atol = 1e-5
rtol= 1e-5
tstart = 0
tend = 5.00 
dt = 1e-6
pseudo-dt=1e-8
pseudo-niters-min=3
pseudo-niters-max=20
pseudo-resid-tol=1e-5
pseudo-controller=none


[solver-artificial-viscosity]
max-artvisc = 0.01
s0 = 0.01
kappa = 5.0


[solver-interfaces]
riemann-solver = rusanov
ldg-beta = 0.5
ldg-tau = 0.1


[solver-interfaces-line]
flux-pts = gauss-legendre-lobatto
quad-deg = 10
quad-pts = gauss-legendre-lobatto

[solver-interfaces-tri]
flux-pts = alpha-opt ;williams-shunn
quad-deg = 10
quad-pts = williams-shunn

[solver-interfaces-quad]
flux-pts = gauss-legendre-lobatto
quad-deg = 10
quad-pts = gauss-legendre-lobatto

[solver-elements-tri]
flux-pts = alpha-opt ;williams-shunn
soln-pts = alpha-opt ;williams-shunn
quad-deg = 10
quad-pts = williams-shunn

[solver-elements-quad]
flux-pts = gauss-legendre-lobatto
soln-pts = gauss-legendre-lobatto
quad-deg = 10
quad-pts = gauss-legendre-lobatto

[solver-elements-hex]
flux-pts = gauss-legendre-lobatto
soln-pts = gauss-legendre-lobatto
quad-deg = 10
quad-pts = gauss-legendre-lobatto

[solver-elements-tet]
flux-pts = alpha-opt ;shunn-ham
soln-pts = alpha-opt ;shunn-ham
quad-deg = 10
quad-pts = shunn-ham

[solver-elements-pri]
flux-pts = alpha-opt ;williams-shunn~gauss-legendre-lobatto
soln-pts = alpha-opt~gauss-legendre-lobatto ;williams-shunn~gauss-legendre-lobatto
quad-deg = 10
quad-pts = williams-shunn~gauss-legendre-lobatto

[solver-elements-pyr]
flux-pts = gauss-legendre-lobatto
soln-pts = gauss-legendre-lobatto
quad-deg = 10
quad-pts = witherden-vincent


[soln-plugin-writer]
dt-out = 0.1
basedir = .
basename = {t:.2f}

[soln-plugin-tavg-1]
nsteps = 10
dt-out = 1.0
tstart = 0.01
mode = continuous
basedir = .
basename = tavg-{t:04.2f}
avg-p = p
avg-u = u
avg-v = v
avg-w = w
avg-pp = p*p
avg-uu = u*u
avg-uv = u*v
avg-uw = u*w
avg-vv = v*v
avg-vw = v*w
avg-ww = w*w
fun-avg-upup = uu - u*u
fun-avg-upvp = uv - u*v
fun-avg-upwp = uw - u*w
fun-avg-vpvp = vv - v*v
fun-avg-vpwp = vw - v*w
fun-avg-wpwp = ww - w*w
fun-avg-urms = sqrt(uu - u*u + vv - v*v +ww - w*w)

[soln-plugin-nancheck]
nsteps = 10

#[soln-plugin-pseudostats]
#flushsteps = 10
#file = residual.csv
#header = true

[soln-plugin-dtstats]
flushsteps = 10
file = residual.csv
header = true

[soln-plugin-fluidforce-upper]
nsteps = 10
quad-deg = 4
file = upper_forces.csv
header = true
morigin = (0.25, 0.0, 0.0)

[soln-plugin-fluidforce-lower]
nsteps = 10
quad-deg = 4
file = lower_forces.csv
header = true
morigin = (0.25, 0.0, 0.0)

[soln-bcs-inlet]
type = char-riem-inv
rho = rhoc
u = Uin
v = Vin
w = 0
p = Pc

[soln-bcs-outlet]
type = char-riem-inv
rho = rhoc
u = Uin
v = Vin
w = 0
p = Pc

[soln-bcs-upper]
type = no-slp-adia-wall

[soln-bcs-lower]
type = no-slp-adia-wall

[soln-ics]
rho = rhoc
u = Uin
v = Vin
w = 0
p = Pc
